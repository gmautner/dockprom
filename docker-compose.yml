version: '3.8'

networks:
  monitor-net:
    driver: overlay

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v3.4.2
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == monitoring

  alertmanager:
    image: prom/alertmanager:v0.28.1
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == monitoring

  nodeexporter:
    image: prom/node-exporter:v1.9.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: grafana/grafana:12.0.2
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == monitoring

  pushgateway:
    image: prom/pushgateway:v1.11.0
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == monitoring

  caddy:
    image: caddy:2.10.0
    ports:
      - "3000:3000"
      - "8080:8080"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == monitoring
